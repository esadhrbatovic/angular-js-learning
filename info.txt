Tutorial:
https://www.w3schools.com/angular/default.asp
https://code.angularjs.org/1.6.9/docs/api/ng

Notes:
add $scope to controller
$scope is the binding object between controller and view (html), can have attributes. Attributes can be declared and manipulated in 
controllers. In view you dont use prefix $scope, but only the property name.


All applications have a $rootScope which is the scope created on the HTML element that contains the ng-app directive.
$scope is available in controllers, if you want to be more specific
If a variable has the same name in both the current scope and in the rootScope, the application uses the one in the current scope.
knowing your scope: scope variables are valid within the DOM / directive / div it is being used. two different divs with the same controller can have different values for the scope property
everytime ng-controller directive is being used in a html tag, a new scope is being worked with. also applies to nested ng-controller usages


custom directive naming: camelCase -> <div camel-case></div>

expressions
ng-init: initializing ng-models within div, rarely used, usually controllers are used

ng-model: Used for databinding. With the ng-model directive you can bind the value of an input field to a variable created in AngularJS.
	-also provides type validation for application data (number, email, required)
	-provides status for application dada (invalid, dirty, touched)
	-provides CSS classes for HTML elements.
	-binds HTML elemts to HTML forms.
ng-model is also used for two-way databinding
	
{{myForm.myField.$valid / $dirty /$touched}}	

impact css with form data in css:
input.ng-invalid{
    background-color: color;
}

ng-model adds or removes the following classes, according to the status of the form field: 
	ng-empty
	ng-not-empty
	ng-touched
	ng-untouched
	ng-valid
	ng-invalid
	ng-dirty
	ng-pending
	ng-pristine
	
ng-show: only displays block it's used in if the expression defined results to true. <div ng-show="..."></div>
	
ng-controller: 
Applications in AngularJS are controlled by controllers. Read about controllers in the AngularJS Controllers chapter.

Because of the immediate synchronization of the model and the view, the controller can be completely separated from the view, 
and simply concentrate on the model data. Thanks to the data binding in AngularJS, the view will reflect any changes made in the controller.

controllers control the data of AngularJS applications.

controllers are regular JavaScript Objects.

AngularJS will invoke the controller with a $scope object.

In AngularJS, $scope is the application object (the owner of application variables and functions).

directives provided by angular: ng-app, ng-model, ng-init, ng-repeat
you can create custom directives

custom directives: created in var app (reference to module at creation), with app.directive("name", function(){ return{template: ...};};
can be used with element name <my-directive></my-directive> or attribute <div my-directive></div>
can also be used in comment or class
you can restrict the usage of the directive within it's declaration by adding restrict: ...

The legal restrict values are:

	E for Element name
	A for Attribute
	C for Class
	M for Comment

ng-repeat: iterate through array of literals or objects

filters:
https://www.w3schools.com/angular/angular_filters.asp

Filter can be used in ng-repeat directive or expression.
Custom filters can be defined with app.filter('filtername', function(){return function(x){};);
giving the returned function from the anonymous function a parameter is required. since this is 
the data the filter is using itself on. in this case x would be a specific name of a person e.g.

services: 
is a object or function that is available and limited to the angularjs application.
$location is one of them. Gives information about the location of the current page

$http service of angularjs.
service objects / functions are passed as a dependency to the controller. just like the $scope

data in ./data directory was generated with following code. https://www.json-generator.com/:
[
  '{{repeat(10)}}',
  {
    _id: '{{objectId()}}',
    isActive: '{{bool()}}',
    balance: '{{floating(1000, 4000, 2, "$0,0.00")}}',
    age: '{{integer(20, 40)}}',
    eyeColor: '{{random("blue", "brown", "green")}}',
    name: '{{firstName()}} {{surname()}}',
    gender: '{{gender()}}',
    company: '{{company().toUpperCase()}}',
    email: '{{email()}}',
    phone: '+1 {{phone()}}',
    address: '{{integer(100, 999)}} {{street()}}, {{city()}}, {{state()}}, {{integer(100, 10000)}}',
    about: '{{lorem(1, "paragraphs")}}',
    registered: '{{date(new Date(2014, 0, 1), new Date(), "YYYY-MM-ddThh:mm:ss Z")}}',
    favoriteFruit: function (tags) {
      var fruits = ['apple', 'banana', 'strawberry'];
      return fruits[tags.integer(0, fruits.length - 1)];
    }
  }
]

defining a parameterized http get call is possible by defining a controller function inside controller. 

angularjs services
https://www.w3schools.com/angular/angular_services.asp